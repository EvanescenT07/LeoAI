Prompt: can you make snake game from Python language 
******************

Sure, here is an example of a simple snake game using Python and the Pygame library:

```python
import pygame
import time
import random

pygame.init()

# colors
black = (0,0,0)
white = (255,255,255)
red = (255,0,0)
green = (0,255,0)

# screen size
screen_width = 800
screen_height = 600

# snake block size
block_size = 20

# initialize screen
game_display = pygame.display.set_mode((screen_width,screen_height))
pygame.display.set_caption('Snake Game')

# clock to control game speed
clock = pygame.time.Clock()

# snake speed
snake_speed = 15

font = pygame.font.SysFont(None, 25)

def snake(block_size, snake_list):
    for x in snake_list:
        pygame.draw.rect(game_display,green,[x[0],x[1],block_size,block_size])

def message_to_screen(msg,color):
    screen_text = font.render(msg, True, color)
    game_display.blit(screen_text, [screen_width/2, screen_height/2])

def game_loop():
    game_exit = False
    game_over = False

    lead_x = screen_width/2
    lead_y = screen_height/2
    lead_x_change = 0
    lead_y_change = 0

    snake_list = []
    snake_length = 1

    rand_apple_x = round(random.randrange(0, screen_width - block_size)/10.0)*10.0
    rand_apple_y = round(random.randrange(0, screen_height - block_size)/10.0)*10.0

    while not game_exit:

        while game_over == True:
            game_display.fill(white)
            message_to_screen("Game over, press C to play again or Q to quit", red)
            pygame.display.update()

            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        game_exit = True
                        game_over = False
                    if event.key == pygame.K_c:
                        game_loop()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_exit = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    lead_x_change = -block_size
                    lead_y_change =